#!/bin/bash

if ! cmd_exists fzf; then
  :
else
export FZF_DEFAULT_OPTS="--ansi --exit-0 --no-mouse --inline-info --border  --height 18 --tac"

fzf-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(\history -n 1 | \
        eval $tac | \
        fzf --query "$LBUFFER" --prompt "[select history]>")
    CURSOR=$#BUFFER
} && zle -N fzf-select-history

fzf-git-recent-branches () {
    local selected_branch=$(git for-each-ref --format='%(refname)' --sort=-committerdate refs/heads | \
        perl -pne 's{^refs/heads/}{}' | \
        fzf --prompt "[select branch]>")
    if [ -n "$selected_branch" ]; then
        BUFFER="git checkout ${selected_branch}"
        zle accept-line
    fi
} && zle -N fzf-git-recent-branches

fzf-find-file() {
if git rev-parse 2> /dev/null; then
    source_files=$(git ls-files)
else	
    source_files=$(find . -type f)
fi
selected_files=$(echo $source_files | fzf --prompt "[find file]>")
    BUFFER="${BUFFER}$(echo $selected_files | tr '\n' ' ')"
    CURSOR=$#BUFFER
} && zle -N fzf-find-file

fzf-snippets() {
    if [ ! -e $snippets_file_path ]; then
        touch $snippets_file_path
    fi
    BUFFER=$(grep -v "^#" $snippets_file_path | fzf --query "$LBUFFER" --prompt "[find snippets]>" )
    CURSOR=$#BUFFER
    zle clear-screen
} && zle -N fzf-snippets

fzf-snippets-add() {
    if [ ! -e $snippets_file_path ]; then
        touch $snippets_file_path
    fi
    echo $BUFFER >> $snippets_file_path
    zle -M "snippets entry! $BUFFER"
} && zle -N fzf-snippets-add

fzf-recent-repos() {
    selected_repo=$(ghq list --full-path | fzf --prompt "[find repository]>" --height 30)
    if [ -n "$selected_repo" ]; then
        BUFFER="cd ${selected_repo}"
        zle accept-line
    fi
} && zle -N fzf-recent-repos

fzf-find-docker-ps() {
    selected_id=$(docker ps | tail -n +2 | fzf --prompt "[find process]" --height 30 | cut -d" " -f1)
    BUFFER="${BUFFER}$(echo $selected_id | tr '\n' ' ')"
    CURSOR=$#BUFFER
} && zle -N fzf-find-docker-ps


fzf-find-aws-profile() {
    selected_profiles=$(aws configure list-profiles | fzf --prompt "[find profile]" --height 30 | cut -d" " -f1)
    BUFFER="${BUFFER}$(echo $selected_profiles | tr '\n' ' ')"
    CURSOR=$#BUFFER
} && zle -N fzf-find-aws-profile

fi