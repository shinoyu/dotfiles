#!/bin/bash

if ! cmd_exists fzf; then
  :
else
git_worktree_path=.git-worktree
fzf-git-recent-branches () {
    local selected_branch=$(git for-each-ref --format='%(refname)' --sort=-committerdate refs/heads | \
        perl -pne 's{^refs/heads/}{}' | \
        fzf --prompt "[select branch]>")
    if [ -n "$selected_branch" ]; then
        BUFFER="git checkout ${selected_branch}"
        zle accept-line
    fi
} && zle -N fzf-git-recent-branches

fzf-git-open-issue () {
    local selected_issue=$(gh issue list | fzf  --prompt "[select issue]>" | awk '{print $1}')
    if [ -n "$selected_issue" ]; then
        BUFFER="gh issue view ${selected_issue} --web"
        zle accept-line
    fi
} && zle -N fzf-git-open-issue

fzf-git-open-pr () {
    local selected_pr=$(gh pr list | fzf --prompt "[select pr]>" | awk '{print $1}')
    if [ -n "$selected_pr" ]; then
        BUFFER="gh pr view ${selected_pr} --web"
        zle accept-line
    fi
} && zle -N fzf-git-open-pr

input_current_branch() {
	BUFFER+=$(eval "git symbolic-ref --short HEAD")
	CURSOR=$#BUFFER
}
zle -N input_current_branch

fi

if ! cmd_exists git; then
  :
else

git-worktree-create() {
    git worktree add $git_worktree_path/$1 -b $1 && echo "git-worktree: create $1!"
    cd $git_worktree_path/$1
}

git-worktree-checkout() {
    cd $git_worktree_path/$1 && echo "git-worktree: checkout $1."
}

git-worktree-remove() {
    git worktree remove -f $git_worktree_path/$1 && echo "git-worktree: deleted ${1}."
}

alias g.s='git status -sb'
alias g.cm='git commit'
alias g.cm.r='git commit --amend'
alias g.l='git log --oneline -20'
alias g.ref='git reflog -10'
alias g.b='git branch'
alias g.b.d='git branch -D'
alias g.b.c='git checkout -b' 
alias g.b.ml="git branch --merged | grep -vE '^\*|master$|main$|develop$|pre_release$'"
alias g.b.mld='g.b.ml | xargs -I % git branch -d %'
alias g.d='git diff'
alias g.d.d='git difftool --dir-diff'
alias g.p='git pull'
alias g.f='git fetch --prune'
alias g.m='git merge'
alias g.ch='git checkout'
alias g.ch.t='git checkout --theirs'
alias g.ch.b='git checkout -'
alias g.s.u='git submodule update'
alias g.c.u='git symbolic-ref --short HEAD | xargs git pull origin'
alias g.cb='git symbolic-ref --short HEAD'
alias g.v='gh repo view --web'

fi